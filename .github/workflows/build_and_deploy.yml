name: Build and Deploy Flutter application
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'codemagic.yaml'
jobs:
  analyze_flutter_app:
    name: Check Flutter sources
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Downloading sources
      - uses: subosito/flutter-action@v2
        name: Preparing Flutter SDK
        with:
          flutter-version: '3.10.6'
          channel: 'stable'
      - run: flutter analyze
        continue-on-error: true
        name: Analyzing sources
      - run: dart format lib --set-exit-if-changed
        name: Format sources
  build_android_flutter_app:
    name: Build Android application using Flutter
    runs-on: ubuntu-latest
    needs: [ analyze_flutter_app ]
    steps:
      - uses: actions/checkout@v3
        name: Downloading sources
      - uses: subosito/flutter-action@v2
        name: Preparing Flutter SDK
        with:
          flutter-version: '3.10.6'
          channel: 'stable'
      - run: |
           export KEYSTORE_PATH=$(pwd)/android/flutter-tour-keystore.jks
           export KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}
           export KEY_ALIAS=${{ vars.KEY_ALIAS }}
           export KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}
           flutter build apk --build-name=1.0.0-${{github.sha}} --build-number=${{github.run_number}}
        name: Building application
      - uses: actions/upload-artifact@v3
        name: Archive production artifacts
        with:
          name: android-app-1.0.0-${{github.run_number}}-${{github.sha}}
          path: |
            build/app/outputs/apk/release/app-release.apk
          retention-days: 1
  build_ios_flutter_app:
    name: Build iOS application using Flutter
    runs-on: macos-latest
    needs: [ analyze_flutter_app ]
    steps:
      - uses: actions/checkout@v3
        name: Downloading sources
      - uses: subosito/flutter-action@v2
        name: Preparing Flutter SDK
        with:
          flutter-version: '3.10.6'
          channel: 'stable'
      - uses: nikolaydymura/Flutter-Export-Plist-Github-Action@v3
        id: generate-plist
        with:
          development-team-id: '8MJN994E42'
          development-team-name: 'Mykola Dymura'
          product-bundle-identifier: 'nd.imagevideo.filters'
          provisioning-profile-specifier: 'imagevideo-filters'
          export-plist-path: 'ios/app-ios-export.plist'
      - uses: nickwph/apple-provisioning-profile-action@v1
        with:
          profile-base64: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER_BASE64 }}
      - run: |
          security create-keychain -p "" flutter-build.keychain
          echo -n ${{ secrets.CERTIFICATE_BASE64 }} | base64 --decode -o ios/key.p12
          security import ios/key.p12 -t agg -k ~/Library/Keychains/flutter-build.keychain -P "${{ secrets.CERTIFICATE_PASSWORD }}" -A
          
          security list-keychains -s ~/Library/Keychains/flutter-build.keychain
          security default-keychain -s ~/Library/Keychains/flutter-build.keychain
          security unlock-keychain -p "" ~/Library/Keychains/flutter-build.keychain
          security set-key-partition-list -S apple-tool:,apple: -s -k "" ~/Library/Keychains/flutter-build.keychain
          
          flutter build ipa --build-name=1.0.0-${{github.sha}} --build-number=${{github.run_number}} --export-options-plist=ios/app-ios-export.plist
        name: Building application
      - uses: actions/upload-artifact@v3
        name: Archive production artifacts
        with:
          name: ios-app-1.0.0-${{github.run_number}}-${{github.sha}}
          path: |
            build/ios/ipa/image-video-demo.ipa
          retention-days: 1
  deploy_apps:
    name: Upload all artifacts
    runs-on: ubuntu-latest
    needs: [build_ios_flutter_app, build_android_flutter_app]
    steps:
      - uses: actions/download-artifact@v3
        name: Download all workflow run artifacts
        with:
          path: ./artifacts
      - uses: wzieba/Firebase-Distribution-Github-Action@v1
        name: Uploading Android production artifact to Firebase App Distribution
        with:
          appId: ${{ secrets.FIREBASE_ANDROID_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: ./artifacts/android-app-1.0.0-${{github.run_number}}-${{github.sha}}/app-release.apk
      - uses: wzieba/Firebase-Distribution-Github-Action@v1
        name: Uploading iOS production artifact to Firebase App Distribution
        with:
          appId: ${{ secrets.FIREBASE_IOS_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          file: ./artifacts/ios-app-1.0.0-${{github.run_number}}-${{github.sha}}/image-video-demo.ipa